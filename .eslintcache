[{"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\index.js":"1","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\App.js":"2","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\index.js":"3","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Error.js":"4","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Forget.js":"5","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Book.js":"6","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Home.js":"7","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Signup.js":"8","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Login.js":"9","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Reset.js":"10","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\PrivateRoute.js":"11","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\Profile.js":"12","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\users.js":"13","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Donate.js":"14","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\MyBooks.js":"15","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\users.js":"16","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\books.js":"17","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\notifications.js":"18","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Footer.js":"19","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Header.js":"20","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Sidebar.js":"21","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\books.js":"22","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\utils\\axiosWithAuth.js":"23","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\public\\Login.js":"24","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Dashboard.js":"25","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\admins.js":"26","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\AdminRoute.js":"27","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\TopMenu.js":"28","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Header.js":"29","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Footer.js":"30","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\authors.js":"31","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\authors.js":"32","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\publishers.js":"33","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\publishers.js":"34","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\Books.js":"35","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\AddBook.js":"36","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\EditBook.js":"37","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\Categories.js":"38","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\AddCategory.js":"39","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\authors\\AddAuthor.js":"40","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\authors\\Authors.js":"41","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\publishers\\AddPublisher.js":"42","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\publishers\\Publishers.js":"43"},{"size":712,"mtime":1621884267936,"results":"44","hashOfConfig":"45"},{"size":4930,"mtime":1626262616082,"results":"46","hashOfConfig":"45"},{"size":370,"mtime":1619030650495,"results":"47","hashOfConfig":"45"},{"size":0,"mtime":1617386567731,"results":"48","hashOfConfig":"45"},{"size":2474,"mtime":1617386560572,"results":"49","hashOfConfig":"45"},{"size":6766,"mtime":1626304984588,"results":"50","hashOfConfig":"45"},{"size":3363,"mtime":1626261091847,"results":"51","hashOfConfig":"45"},{"size":7166,"mtime":1620830432735,"results":"52","hashOfConfig":"45"},{"size":3475,"mtime":1620761467452,"results":"53","hashOfConfig":"45"},{"size":3654,"mtime":1617386556950,"results":"54","hashOfConfig":"45"},{"size":575,"mtime":1626259378804,"results":"55","hashOfConfig":"45"},{"size":7386,"mtime":1626260930131,"results":"56","hashOfConfig":"45"},{"size":5851,"mtime":1626305795055,"results":"57","hashOfConfig":"45"},{"size":5354,"mtime":1622309006767,"results":"58","hashOfConfig":"45"},{"size":3081,"mtime":1626281950282,"results":"59","hashOfConfig":"45"},{"size":426,"mtime":1617386550544,"results":"60","hashOfConfig":"45"},{"size":734,"mtime":1620934045409,"results":"61","hashOfConfig":"45"},{"size":624,"mtime":1617386549709,"results":"62","hashOfConfig":"45"},{"size":259,"mtime":1620666931186,"results":"63","hashOfConfig":"45"},{"size":2132,"mtime":1626261106656,"results":"64","hashOfConfig":"45"},{"size":1452,"mtime":1620658920388,"results":"65","hashOfConfig":"45"},{"size":6703,"mtime":1622230528971,"results":"66","hashOfConfig":"45"},{"size":328,"mtime":1626200930703,"results":"67","hashOfConfig":"45"},{"size":3310,"mtime":1620992794018,"results":"68","hashOfConfig":"45"},{"size":1084,"mtime":1621886702173,"results":"69","hashOfConfig":"45"},{"size":1872,"mtime":1626262620371,"results":"70","hashOfConfig":"45"},{"size":576,"mtime":1626259422670,"results":"71","hashOfConfig":"45"},{"size":3158,"mtime":1622468262930,"results":"72","hashOfConfig":"45"},{"size":905,"mtime":1622322640507,"results":"73","hashOfConfig":"45"},{"size":693,"mtime":1621869591090,"results":"74","hashOfConfig":"45"},{"size":498,"mtime":1619029088426,"results":"75","hashOfConfig":"45"},{"size":2474,"mtime":1622325277389,"results":"76","hashOfConfig":"45"},{"size":2517,"mtime":1622465121990,"results":"77","hashOfConfig":"45"},{"size":531,"mtime":1619030533857,"results":"78","hashOfConfig":"45"},{"size":3900,"mtime":1622311386688,"results":"79","hashOfConfig":"45"},{"size":10342,"mtime":1622226350321,"results":"80","hashOfConfig":"45"},{"size":12244,"mtime":1622468775037,"results":"81","hashOfConfig":"45"},{"size":3498,"mtime":1622391007999,"results":"82","hashOfConfig":"45"},{"size":2761,"mtime":1622230537046,"results":"83","hashOfConfig":"45"},{"size":2668,"mtime":1622464169619,"results":"84","hashOfConfig":"45"},{"size":3349,"mtime":1622390790513,"results":"85","hashOfConfig":"45"},{"size":2692,"mtime":1622464211636,"results":"86","hashOfConfig":"45"},{"size":3415,"mtime":1622465026174,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"agn1d2",{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"90"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"90"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"90"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"90"},"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\index.js",[],["194","195"],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\App.js",["196","197"],"import React from \"react\";\nimport \"./App.css\";\nimport { useDispatch } from \"react-redux\";\n//import { adminLogout } from \"./redux/actions/admins\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport cookies from \"js-cookies\";\n\nimport Home from \"./components/frontend/public/Home.js\";\nimport Login from \"./components/frontend/public/Login.js\";\nimport Signup from \"./components/frontend/public/Signup.js\";\nimport Forget from \"./components/frontend/public/Forget.js\";\nimport Reset from \"./components/frontend/public/Reset.js\";\nimport Book from \"./components/frontend/public/Book.js\";\nimport Error from \"./components/frontend/public/Error.js\";\nimport Donate from \"./components/frontend/public/Donate\";\n/* Protected*/\nimport PrivateRoute from \"./components/frontend/protected/PrivateRoute.js\";\nimport Profile from \"./components/frontend/protected/Profile.js\";\nimport MyBook from \"./components/frontend/protected/MyBooks\";\n/* Admin */\nimport AdminLogin from \"./components/backend/public/Login.js\";\nimport AdminRoute from \"./components/backend/protected/AdminRoute.js\";\nimport Dashboard from \"./components/backend/protected/Dashboard.js\";\nimport Books from \"./components/backend/protected/books/Books.js\";\nimport AddBook from \"./components/backend/protected/books/AddBook.js\";\nimport EditBook from \"./components/backend/protected/books/EditBook\";\nimport BooksCategories from \"./components/backend/protected/books/Categories\";\nimport AddCategory from \"./components/backend/protected/books/AddCategory\";\nimport Authors from \"./components/backend/protected/authors/Authors\";\nimport AddAuthor from \"./components/backend/protected/authors/AddAuthor\";\nimport AddPublisher from \"./components/backend/protected/publishers/AddPublisher\";\nimport Publishers from \"./components/backend/protected/publishers/Publishers\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route\n            exact\n            path=\"/admin\"\n            render={(props) => <AdminLogin {...props} />}\n          />\n          <AdminRoute exact path=\"/admin/dashboard\" component={Dashboard} />\n          <AdminRoute exact path=\"/admin/books\" component={Books} />\n          <AdminRoute exact path=\"/admin/books/add\" component={AddBook} />\n          <AdminRoute\n            exact\n            path=\"/admin/books/:slug/edit\"\n            component={EditBook}\n          />\n          <AdminRoute\n            exact\n            path=\"/admin/books/categories\"\n            component={BooksCategories}\n          />\n          <AdminRoute\n            exact\n            path=\"/admin/books/categories/add\"\n            component={AddCategory}\n          />\n          <AdminRoute exact path=\"/admin/authors\" component={Authors} />\n          <AdminRoute exact path=\"/admin/authors/add\" component={AddAuthor} />\n          <AdminRoute exact path=\"/admin/publishers\" component={Publishers} />\n          <AdminRoute\n            exact\n            path=\"/admin/publishers/add\"\n            component={AddPublisher}\n          />\n          <Route\n            exact\n            path=\"/admin/logout\"\n            render={() => {\n              localStorage.removeItem(\"_admin\");\n              localStorage.removeItem(\"adminToken\");\n              //dispatch(adminLogout());\n              window.location.replace(\"/admin\");\n            }}\n          />\n\n          {/* Private Frontend Routes */}\n          <PrivateRoute exact path=\"/profile\" component={Profile} />\n          <PrivateRoute exact path=\"/mybook\" component={MyBook} />\n          <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n          <Route\n            exact\n            path=\"/category/:category\"\n            render={(props) => <Home {...props} />}\n          />\n          <Route exact path=\"/login\" render={(props) => <Login {...props} />} />\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => <Signup {...props} />}\n          />\n          <Route\n            exact\n            path=\"/forget\"\n            render={(props) => <Forget {...props} />}\n          />\n          <Route\n            exact\n            path=\"/reset-password\"\n            render={(props) => <Reset {...props} />}\n          />\n          <Route\n            exact\n            path=\"/donate\"\n            render={(props) => <Donate {...props} />}\n          />\n          <Route\n            exact\n            path=\"/logout\"\n            render={() => {\n              localStorage.removeItem(\"_user\");\n              localStorage.removeItem(\"token\");\n              //dispatch(userLogout());\n              window.location.replace(\"/\");\n            }}\n          />\n          <Route path=\"/:title\" render={(props) => <Book {...props} />} />\n          <Route path=\"/error\" render={(props) => <Error {...props} />} />\n          {/** ADMIN */}\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\index.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Error.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Forget.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Book.js",["198"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getBook, updateBookRatingByUser } from \"../../../redux/actions/books\";\r\nimport { getUser, updateUserBook } from \"../../../redux/actions/users\";\r\nimport { Row, Col, Image, Rate, Alert, Tag, Button } from \"antd\";\r\nimport cookies from \"js-cookies\";\r\n\r\nimport Header from \"./Header\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Book = (props) => {\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const book = useSelector((state) => state.books.book);\r\n  const user = useSelector((state) => state.users);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBook(props.match.params.title));\r\n    if (localStorage.getItem(\"_user\")) {\r\n      dispatch(getUser(parseInt(localStorage.getItem(\"_user\"))));\r\n    }\r\n  }, [dispatch, props.match.params.title]);\r\n\r\n  const bookmarkBook = (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"book\", typeof book[0].id);\r\n    //console.log(\"user\", typeof localStorage.getItem(\"_user\"));\r\n    dispatch(\r\n      updateUserBook(parseInt(localStorage.getItem(\"_user\")), book[0].id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Row className=\"main-content\">\r\n        <Sidebar />\r\n        <Col align=\"left\" span={16}>\r\n          <div className=\"single-book\">\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            {notifications.loading ? (\r\n              <Row style={{ height: \"10vh\" }} verticalAlign=\"middle\">\r\n                <div className=\"loader\"></div>\r\n              </Row>\r\n            ) : (\r\n              <Row gutter={16}>\r\n                {book &&\r\n                  book.map((book) => {\r\n                    return (\r\n                      <>\r\n                        <Col span={8} key={book.id}>\r\n                          <Image preview={false} src={book.cover} />\r\n                        </Col>\r\n                        <Col span={8}>\r\n                          <div class=\"tags\">\r\n                            {book.category_name.map((category) => {\r\n                              return (\r\n                                <Tag color=\"red\" key={category}>\r\n                                  {category}\r\n                                </Tag>\r\n                              );\r\n                            })}\r\n                          </div>\r\n\r\n                          {user.user != null ? (\r\n                            book.ratings == null ? (\r\n                              <Rate\r\n                                defaultValue={parseInt(book.ratings.toFixed(0))}\r\n                                onChange={(rating) => {\r\n                                  dispatch(\r\n                                    updateBookRatingByUser(\r\n                                      book.slug,\r\n                                      book.id,\r\n                                      parseInt(localStorage.getItem(\"_user\")),\r\n                                      rating\r\n                                    )\r\n                                  );\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <Rate\r\n                                defaultValue={parseFloat(book.ratings).toFixed(\r\n                                  0\r\n                                )}\r\n                                onChange={(rating) => {\r\n                                  dispatch(\r\n                                    updateBookRatingByUser(\r\n                                      book.slug,\r\n                                      book.id,\r\n                                      parseInt(localStorage.getItem(\"_user\")),\r\n                                      rating\r\n                                    )\r\n                                  );\r\n                                }}\r\n                                value={parseFloat(book.ratings).toFixed(0)}\r\n                              />\r\n                            )\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          {user.user == null ? (\r\n                            book.ratings == null ? (\r\n                              <Tag color=\"#f50\">No Ratings</Tag>\r\n                            ) : (\r\n                              <Rate\r\n                                disabled\r\n                                value={parseFloat(book.ratings).toFixed(0)}\r\n                              />\r\n                            )\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n\r\n                          <h1 href={`/${book.slug}`} className=\"title\">\r\n                            {book.title}\r\n                          </h1>\r\n                          {user.user && user.user.saved_books !== null ? (\r\n                            user.user.saved_books.includes(book.id) ? (\r\n                              <Button\r\n                                size=\"small\"\r\n                                type=\"primary\"\r\n                                danger\r\n                                onClick={bookmarkBook}\r\n                              >\r\n                                Remove from list\r\n                              </Button>\r\n                            ) : (\r\n                              <Button\r\n                                size=\"small\"\r\n                                type=\"primary\"\r\n                                onClick={bookmarkBook}\r\n                              >\r\n                                Add to list\r\n                              </Button>\r\n                            )\r\n                          ) : (\r\n                            <Button\r\n                              size=\"small\"\r\n                              type=\"primary\"\r\n                              onClick={bookmarkBook}\r\n                            >\r\n                              Add to list\r\n                            </Button>\r\n                          )}\r\n\r\n                          <p\r\n                            style={{\r\n                              marginBottom: 0,\r\n                            }}\r\n                          >\r\n                            Author: {book.author_name}, {book.year}\r\n                          </p>\r\n                          <p>Publisher: {book.publisher_name}</p>\r\n                          <p>{book.description}</p>\r\n                        </Col>\r\n                      </>\r\n                    );\r\n                  })}\r\n              </Row>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Home.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Signup.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Login.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Reset.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\PrivateRoute.js",["199","200"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport cookies from \"js-cookies\";\r\nimport { axiosWithAuth } from \"../../../utils/axiosWithAuth\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const userSession = localStorage.getItem(\"_user\");\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!userSession) {\r\n          return <Redirect to=\"/login\" />;\r\n        } else {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\Profile.js",["201"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert } from \"antd\";\r\nimport cookies from \"js-cookies\";\r\nimport { getUser, updateUser } from \"../../../redux/actions/users\";\r\nimport Header from \"../public/Header\";\r\nimport Footer from \"../public/Footer\";\r\n\r\nconst Profile = (props) => {\r\n  const { register, handleSubmit, errors, watch, setValue } = useForm();\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const user = useSelector((state) => state.users.user);\r\n  const dispatch = useDispatch();\r\n  let userId = localStorage.getItem(\"_user\");\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      dispatch(getUser(userId));\r\n    }\r\n  }, [dispatch, userId]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const fields = [\"name\", \"phone\", \"address\", \"email\"];\r\n      fields.forEach((field) => setValue(field, user[field]));\r\n    }\r\n  }, [user, setValue]);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(updateUser(userId, data));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Row justify=\"center\">\r\n        <Col className=\"form-column\">\r\n          <div className=\"loader-wrapper\" align=\"center\">\r\n            {notifications.loading && <div className=\"loader\"></div>}\r\n          </div>\r\n\r\n          {notifications.message && (\r\n            <Alert message={notifications.message} type=\"warning\" showIcon />\r\n          )}\r\n\r\n          <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"name\"\r\n                  placeholder=\"Name\"\r\n                  ref={register({\r\n                    required: \"Name is required.\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"Name must be minimum of 8 characters.\",\r\n                    },\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n              </div>\r\n              {errors.name && (\r\n                <p className=\"errors\">\r\n                  <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                  {errors.name.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"phone\"\r\n                  placeholder=\"Phone Number\"\r\n                  ref={register({\r\n                    required: \"Phone Number is required.\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      pattern: {\r\n                        value: /[0-9]*/i,\r\n                        message: \"Invalid phone number.\",\r\n                      },\r\n                      message: \"Phone Number must be minimum of 8 characters.\",\r\n                    },\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"phone icon\"></i>\r\n              </div>\r\n              {errors.phone && (\r\n                <p className=\"errors\">\r\n                  <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                  {errors.phone.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"address\"\r\n                  placeholder=\"Address\"\r\n                  ref={register({\r\n                    required: \"Address is required.\",\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"Address must be minimum of 8 characters.\",\r\n                    },\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"home icon\"></i>\r\n              </div>\r\n              {errors.address && (\r\n                <p className=\"errors\">\r\n                  <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                  {errors.address.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"email\"\r\n                  placeholder=\"Email address\"\r\n                  readOnly\r\n                  ref={register({\r\n                    required: \"Email address is required.\",\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: \"Invalid email address.\",\r\n                    },\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"mail icon\"></i>\r\n              </div>\r\n            </div>\r\n            <p>Set new password</p>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Password\"\r\n                  ref={register({\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: \"Password must be minimum of 8 characters.\",\r\n                    },\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"lock icon\"></i>\r\n              </div>\r\n              {errors.password && (\r\n                <p className=\"errors\">\r\n                  <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                  {errors.password.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"ant-form-item\">\r\n              <div className=\"ant-form-item-control\">\r\n                <input\r\n                  name=\"confirm_password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  ref={register({\r\n                    minLength: {\r\n                      value: 8,\r\n                      message:\r\n                        \"Confirm Password must be minimum of 8 characters.\",\r\n                    },\r\n                    validate: (value) =>\r\n                      value === watch(\"password\") || \"Passwords don't match.\",\r\n                  })}\r\n                  className=\"ant-input\"\r\n                />\r\n                <i aria-hidden=\"true\" className=\"lock icon\"></i>\r\n              </div>\r\n              {errors.confirm_password && (\r\n                <p className=\"errors\">\r\n                  <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                  {errors.confirm_password.message}\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ant-form-item\">\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"ant-btn ant-btn-primary login-form-button\"\r\n              >\r\n                Login\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\users.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Donate.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\protected\\MyBooks.js",["202"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Image, Rate, Alert } from \"antd\";\r\nimport cookies from \"js-cookies\";\r\nimport { getUserBook } from \"../../../redux/actions/users\";\r\nimport { updateBookRatingByUser } from \"../../../redux/actions/books\";\r\nimport Header from \"../public/Header\";\r\nimport Sidebar from \"../public/Sidebar\";\r\nimport Footer from \"../public/Footer\";\r\n\r\nconst MyBook = (props) => {\r\n  const notifications = useSelector((state) => state.notifications);\r\n  const books = useSelector((state) => state.books);\r\n  const user = useSelector((state) => state.users);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"_user\")) {\r\n      dispatch(getUserBook(parseInt(localStorage.getItem(\"_user\"))));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  console.log(user);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Row gutter={32}>\r\n        <Sidebar />\r\n        <Col span={16} align=\"left\">\r\n          <h4>Saved Books</h4>\r\n          {notifications.message && (\r\n            <Alert message={notifications.message} type=\"warning\" showIcon />\r\n          )}\r\n\r\n          {notifications.loading ? (\r\n            <Row style={{ height: \"10vh\" }} verticalAlign=\"middle\">\r\n              <div className=\"loader\"></div>\r\n            </Row>\r\n          ) : (\r\n            <Row gutter={16}>\r\n              {books.books &&\r\n                books.books.map((book) => {\r\n                  return (\r\n                    <Col span={4} className=\"book\" key={book.id} align=\"center\">\r\n                      <Image\r\n                        width={180}\r\n                        height={280}\r\n                        src={book.cover}\r\n                        preview={false}\r\n                      />\r\n                      <Rate\r\n                        defaultValue={parseFloat(book.ratings).toFixed(0)}\r\n                        onChange={(rating) => {\r\n                          dispatch(\r\n                            updateBookRatingByUser(\r\n                              book.slug,\r\n                              book.id,\r\n                              parseInt(localStorage.getItem(\"_user\")),\r\n                              rating\r\n                            )\r\n                          );\r\n                        }}\r\n                        value={parseFloat(book.ratings).toFixed(0)}\r\n                      />\r\n                      <p className=\"book-title\">\r\n                        {user.user &&\r\n                          user.user.saved_books &&\r\n                          user.user.saved_books.includes(book.id) && (\r\n                            <i class=\"fas fa-bookmark\"></i>\r\n                          )}\r\n                        <a href={`/${book.slug}`} className=\"title\">\r\n                          {book.title}\r\n                        </a>{\" \"}\r\n                      </p>\r\n                    </Col>\r\n                  );\r\n                })}\r\n            </Row>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyBook;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\users.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\books.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\notifications.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Footer.js",["203","204"],"import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <Row justify=\"center\">\r\n      <p>\r\n        &copy; Libroh | <a href=\"#\">Privacy and Policy</a>\r\n      </p>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Header.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\frontend\\public\\Sidebar.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\books.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\utils\\axiosWithAuth.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\public\\Login.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Dashboard.js",["205"],"import React from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Dashboard = props => {\r\n  //const { register, handleSubmit, errors } = useForm();\r\n  //const notifications = useSelector((state) => state.notifications);\r\n  //const dispatch = useDispatch();\r\n  //const onSubmit = (data) => dispatch(userLogin(data));\r\n  // var startDate = moment().subtract(1, 'months').format('MM-DD');\r\n  // var endDate = moment().format('MM-DD');\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <Row class=\"dashboard\">\r\n            <h3 className=\"page-title\">Dashboard</h3>\r\n          </Row>\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\admins.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\AdminRoute.js",["206"],"import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport cookies from \"js-cookies\";\r\n//import { axiosWithAuth } from \"../../../utils/axiosWithAuth\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  const adminSession = localStorage.getItem(\"_admin\");\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!adminSession) {\r\n          return <Redirect to=\"/admin\" />;\r\n        } else {\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\TopMenu.js",["207"],"import React, { useState } from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Menu, Image } from \"antd\";\r\n\r\n// import Header from \"../public/Header\";\r\n// import Footer from \"../public/Footer\";\r\n\r\nconst TopMenu = props => {\r\n  const [current, setCurrent] = useState(\"mail\");\r\n  const { SubMenu } = Menu;\r\n\r\n  const handleClick = e => {\r\n    setCurrent(e.key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Menu onClick={handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n        <Menu.Item key=\"home\">Libroh</Menu.Item>\r\n        <Menu.Item key=\"dashboard\">\r\n          <i class=\"fas fa-border-all\"></i>{\" \"}\r\n          <a href=\"/admin/dashboard\" rel=\"noopener noreferrer\">\r\n            Dashboard\r\n          </a>\r\n        </Menu.Item>\r\n        <SubMenu key=\"books\" title=\" Books\" icon={<i class=\"fas fa-book\"></i>}>\r\n          <Menu.Item key=\"books:1\">\r\n            <i class=\"fas fa-book\"></i>{\" \"}\r\n            <a href=\"/admin/books\" rel=\"noopener noreferrer\">\r\n              All Books\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"books:2\">\r\n            <i class=\"fas fa-plus-circle\"></i>{\" \"}\r\n            <a href=\"/admin/books/add\" rel=\"noopener noreferrer\">\r\n              Add New Book\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"books:3\">\r\n            <i class=\"fas fa-coins\"></i>{\" \"}\r\n            <a href=\"/admin/books/categories\" rel=\"noopener noreferrer\">\r\n              Categories\r\n            </a>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"authors\"\r\n          title=\" Authors\"\r\n          icon={<i class=\"fas fa-user-friends\"></i>}\r\n        >\r\n          <Menu.Item key=\"author:1\">\r\n            <i class=\"fas fa-user-friends\"></i>{\" \"}\r\n            <a href=\"/admin/authors\" rel=\"noopener noreferrer\">\r\n              All Authors\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"author:2\">\r\n            <i class=\"fas fa-plus-circle\"></i>{\" \"}\r\n            <a href=\"/admin/authors/add\" rel=\"noopener noreferrer\">\r\n              Add New Author\r\n            </a>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"publishers\"\r\n          title=\" Publishers\"\r\n          icon={<i class=\"fas fa-user-friends\"></i>}\r\n        >\r\n          <Menu.Item key=\"publisher:1\">\r\n            <i class=\"fas fa-user-friends\"></i>{\" \"}\r\n            <a href=\"/admin/publishers\" rel=\"noopener noreferrer\">\r\n              All Publisher\r\n            </a>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"publisher:2\">\r\n            <i class=\"fas fa-plus-circle\"></i>{\" \"}\r\n            <a href=\"/admin/publishers/add\" rel=\"noopener noreferrer\">\r\n              Add New Publisher\r\n            </a>\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <SubMenu\r\n          key=\"settings\"\r\n          title=\" Settings\"\r\n          icon={<i class=\"fas fa-tools\"></i>}\r\n        >\r\n          <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\r\n          <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TopMenu;\r\n",["208","209"],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Header.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\Footer.js",["210","211","212","213"],"import React from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Image, Pagination, Rate } from \"antd\";\r\n// import Header from \"../public/Header\";\r\n// import Footer from \"../public/Footer\";\r\n\r\nconst Footer = props => {\r\n  //const { register, handleSubmit, errors } = useForm();\r\n  //const notifications = useSelector((state) => state.notifications);\r\n  //const dispatch = useDispatch();\r\n  //const onSubmit = (data) => dispatch(userLogin(data));\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <p>Copyright © 2021 Libroh. All rights reserved.</p>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\authors.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\authors.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\actions\\publishers.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\redux\\reducers\\publishers.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\Books.js",[],"C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\AddBook.js",["214","215"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert, Select } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { getAuthors } from \"../../../../redux/actions/authors\";\r\nimport { getPublishers } from \"../../../../redux/actions/publishers\";\r\nimport { postBook, getAllCategories } from \"../../../../redux/actions/books\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst AddBook = props => {\r\n  const notifications = useSelector(state => state.notifications);\r\n  const authors = useSelector(state => state.authors);\r\n  const publishers = useSelector(state => state.publishers);\r\n  const books = useSelector(state => state.books);\r\n  const dispatch = useDispatch();\r\n  const [dropDownValues, setDropDownValues] = useState({\r\n    author: \"\",\r\n    publisher: \"\",\r\n    categories: [1]\r\n  });\r\n\r\n  const { register, errors, handleSubmit, watch, reset } = useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n    dispatch(getPublishers());\r\n    dispatch(getAuthors());\r\n  }, [dispatch]);\r\n\r\n  const handleDropDown = e => {\r\n    setDropDownValues({\r\n      ...dropDownValues,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleCheckbox = e => {\r\n    let value = parseInt(e.target.value);\r\n    if (dropDownValues.categories.includes(value)) {\r\n      setDropDownValues({\r\n        ...dropDownValues,\r\n        categories: dropDownValues.categories.filter(e => e !== value)\r\n      });\r\n    } else {\r\n      setDropDownValues({\r\n        ...dropDownValues,\r\n        categories: [...dropDownValues.categories, value]\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    // alert(JSON.stringify(data));\r\n    dispatch(postBook({ data, dropDownValues }));\r\n    setDropDownValues({\r\n      author: \"\",\r\n      publisher: \"\",\r\n      categories: [1]\r\n    });\r\n    reset();\r\n  };\r\n\r\n  console.log(\"val\", dropDownValues);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">Add New Book</h3>\r\n\r\n          <Col span={12} align=\"left\">\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            <Form\r\n              onFinish={handleSubmit(onSubmit)}\r\n              className=\"ant-form ant-form-horizontal login-form\"\r\n            >\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"title\"\r\n                    placeholder=\"Book Title\"\r\n                    ref={register({\r\n                      required: \"Book Title is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.title && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.title.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"isbn\"\r\n                    placeholder=\"ISBN\"\r\n                    ref={register({\r\n                      required: \"ISBN is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.isbn && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.isbn.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <textarea\r\n                    rows=\"4\"\r\n                    cols=\"50\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    ref={register({\r\n                      required: \"Description is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.description && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.description.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"total_pages\"\r\n                    placeholder=\"Total Pages\"\r\n                    ref={register({\r\n                      required: \"Total Pages is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.total_pages && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.total_pages.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"year\"\r\n                    placeholder=\"Year\"\r\n                    ref={register({\r\n                      required: \"Year is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.year && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.year.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <select\r\n                    name=\"author\"\r\n                    className=\"ant-input\"\r\n                    onChange={handleDropDown}\r\n                  >\r\n                    <option value=\"\" disabled selected>\r\n                      Select author\r\n                    </option>\r\n                    {authors.authors &&\r\n                      authors.authors.map(author => (\r\n                        <option value={author.id}>{author.name}</option>\r\n                      ))}\r\n                  </select>\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.authors && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.authors.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <select\r\n                    name=\"publisher\"\r\n                    className=\"ant-input\"\r\n                    onChange={handleDropDown}\r\n                  >\r\n                    <option value=\"\" disabled selected>\r\n                      Select publisher\r\n                    </option>\r\n                    {publishers.publishers &&\r\n                      publishers.publishers.map(publisher => (\r\n                        <option value={publisher.id}>{publisher.name}</option>\r\n                      ))}\r\n                  </select>\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.publisher && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.publisher.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <legend>Categories</legend>\r\n                  <Row style={{ padding: \"0\" }}>\r\n                    {books.categories &&\r\n                      books.categories.categories.map(category => (\r\n                        <Col span={24}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name={category.name}\r\n                            value={category.id}\r\n                            defaultChecked={\r\n                              category.slug === \"uncategorized\" ? true : false\r\n                            }\r\n                            onChange={handleCheckbox}\r\n                          />\r\n                          <label> {category.name}</label>\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                </div>\r\n                {errors.publisher && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.publisher.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"ant-btn ant-btn-primary login-form-button\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\EditBook.js",["216","217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert, Select } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { getAuthors } from \"../../../../redux/actions/authors\";\r\nimport { getPublishers } from \"../../../../redux/actions/publishers\";\r\nimport {\r\n  getBook,\r\n  updateBook,\r\n  getAllCategories\r\n} from \"../../../../redux/actions/books\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst EditBook = props => {\r\n  const notifications = useSelector(state => state.notifications);\r\n  const authors = useSelector(state => state.authors);\r\n  const publishers = useSelector(state => state.publishers);\r\n  const books = useSelector(state => state.books);\r\n  const [dropDownValues, setDropDownValues] = useState({\r\n    author: \"\",\r\n    publisher: \"\",\r\n    categories: [1]\r\n  });\r\n  const dispatch = useDispatch();\r\n  const { register, errors, handleSubmit, watch, reset } = useForm();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBook(props.match.params.slug));\r\n    dispatch(getAllCategories());\r\n    dispatch(getPublishers());\r\n    dispatch(getAuthors());\r\n  }, [dispatch, props.match.params.slug]);\r\n\r\n  useEffect(() => {\r\n    if (books.book !== null) {\r\n      setDropDownValues({\r\n        author: books.book[0].author_id,\r\n        publisher: books.book[0].publisher_id,\r\n        categories: books.book[0].category_ids\r\n      });\r\n    }\r\n  }, [books.book]);\r\n\r\n  console.log(dropDownValues);\r\n\r\n  const handleDropDown = e => {\r\n    setDropDownValues({\r\n      ...dropDownValues,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleCheckbox = e => {\r\n    let value = parseInt(e.target.value);\r\n    if (dropDownValues.categories.includes(value)) {\r\n      setDropDownValues({\r\n        ...dropDownValues,\r\n        categories: dropDownValues.categories.filter(e => e !== value)\r\n      });\r\n    } else {\r\n      setDropDownValues({\r\n        ...dropDownValues,\r\n        categories: [...dropDownValues.categories, value]\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmit = (data, e) => {\r\n    // alert(JSON.stringify(data));\r\n    // alert(JSON.stringify(dropDownValues));\r\n    dispatch(updateBook(props.match.params.slug, { data, dropDownValues }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">Add New Book</h3>\r\n\r\n          <Col span={12} align=\"left\">\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            <Form\r\n              onFinish={handleSubmit(onSubmit)}\r\n              className=\"ant-form ant-form-horizontal login-form\"\r\n            >\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"title\"\r\n                    placeholder=\"Book Title\"\r\n                    ref={register({\r\n                      required: \"Book Title is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                    value={books.book !== null ? books.book[0].title : null}\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.title && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.title.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"isbn\"\r\n                    placeholder=\"ISBN\"\r\n                    ref={register({\r\n                      required: \"ISBN is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                    defaultValue={\r\n                      books.book !== null ? books.book[0].isbn : null\r\n                    }\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.isbn && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.isbn.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <textarea\r\n                    rows=\"4\"\r\n                    cols=\"50\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description\"\r\n                    ref={register({\r\n                      required: \"Description is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                    defaultValue={\r\n                      books.book !== null ? books.book[0].description : null\r\n                    }\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.description && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.description.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"total_pages\"\r\n                    placeholder=\"Total Pages\"\r\n                    ref={register({\r\n                      required: \"Total Pages is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                    defaultValue={\r\n                      books.book !== null ? books.book[0].total_pages : null\r\n                    }\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.total_pages && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.total_pages.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    type=\"number\"\r\n                    name=\"year\"\r\n                    placeholder=\"Year\"\r\n                    ref={register({\r\n                      required: \"Year is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                    defaultValue={\r\n                      books.book !== null ? books.book[0].year : null\r\n                    }\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.year && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.year.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <select\r\n                    name=\"author\"\r\n                    className=\"ant-input\"\r\n                    onChange={handleDropDown}\r\n                  >\r\n                    <option value=\"\" disabled selected>\r\n                      Select author\r\n                    </option>\r\n                    {authors.authors &&\r\n                      authors.authors.map(author => (\r\n                        <option\r\n                          value={author.id}\r\n                          selected={\r\n                            books.book !== null &&\r\n                            books.book[0].author_name === author.name\r\n                              ? \"selected\"\r\n                              : null\r\n                          }\r\n                        >\r\n                          {author.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.authors && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.authors.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <select\r\n                    name=\"publisher\"\r\n                    className=\"ant-input\"\r\n                    onChange={handleDropDown}\r\n                  >\r\n                    <option value=\"\" disabled selected>\r\n                      Select publisher\r\n                    </option>\r\n                    {publishers.publishers &&\r\n                      publishers.publishers.map(publisher => (\r\n                        <option\r\n                          value={publisher.id}\r\n                          selected={\r\n                            books.book !== null &&\r\n                            books.book[0].publisher_name === publisher.name\r\n                              ? \"selected\"\r\n                              : null\r\n                          }\r\n                        >\r\n                          {publisher.name}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.publisher && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.publisher.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <legend>Categories</legend>\r\n                  <Row style={{ padding: \"0\" }}>\r\n                    {books.categories &&\r\n                      books.categories.categories.map(category => (\r\n                        <Col span={24}>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name={category.name}\r\n                            value={category.id}\r\n                            defaultChecked={\r\n                              //category.slug === \"uncategorized\" ? true : false\r\n                              books.book !== null &&\r\n                              books.book[0].category_ids.includes(category.id)\r\n                                ? true\r\n                                : false\r\n                            }\r\n                            onChange={handleCheckbox}\r\n                          />\r\n                          <label> {category.name}</label>\r\n                        </Col>\r\n                      ))}\r\n                  </Row>\r\n                </div>\r\n                {errors.publisher && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.publisher.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"ant-btn ant-btn-primary login-form-button\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBook;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\Categories.js",["219"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Table, Avatar, Space, Button, Modal, Alert } from \"antd\";\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\nimport {\r\n  getAllCategories,\r\n  deleteCategories\r\n} from \"../../../../redux/actions/books\";\r\n\r\nconst BookCategories = props => {\r\n  //const { register, handleSubmit, errors } = useForm();\r\n  const notifications = useSelector(state => state.notifications);\r\n  const categories = useSelector(state => state.books);\r\n  const dispatch = useDispatch();\r\n  const [delConfirm, setDelConfirm] = useState(false);\r\n  const [delState, setdelState] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategories());\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n\r\n    {\r\n      title: \"Slug\",\r\n      dataIndex: \"slug\",\r\n      key: \"slug\"\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            size=\"small\"\r\n            type=\"ghost\"\r\n            href={`/category/${record.slug}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            View\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            onClick={() => {\r\n              setdelState(record.id);\r\n              setDelConfirm(true);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const data =\r\n    !notifications.loading && categories.categories !== null\r\n      ? categories.categories.categories.map(category => ({\r\n          id: category.id,\r\n          name: category.name,\r\n          slug: category.slug\r\n        }))\r\n      : null;\r\n\r\n  const deleteCategory = id => {\r\n    dispatch(deleteCategories(id));\r\n    setDelConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">\r\n            Categories{\" \"}\r\n            <Button\r\n              size=\"small\"\r\n              type=\"primary\"\r\n              href=\"/admin/books/categories/add\"\r\n            >\r\n              Add New\r\n            </Button>\r\n          </h3>\r\n          <Col span={12}>\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n          </Col>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            pagination={{\r\n              pageSizeOptions: [\"25\", \"50\"],\r\n              showSizeChanger: true\r\n            }}\r\n          />\r\n          <Footer />\r\n        </Col>\r\n        <Modal\r\n          title=\"Modal\"\r\n          visible={delConfirm}\r\n          onOk={() => deleteCategory(delState)}\r\n          onCancel={() => setDelConfirm(false)}\r\n          okText=\"Ok\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          Delete Category?\r\n        </Modal>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookCategories;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\books\\AddCategory.js",["220","221","222","223","224"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert, Select } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postCategory } from \"../../../../redux/actions/books\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst AddCategory = props => {\r\n  const notifications = useSelector(state => state.notifications);\r\n  const books = useSelector(state => state.books);\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, errors, handleSubmit, watch, reset } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    // alert(JSON.stringify(data));\r\n    dispatch(postCategory(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">Add New Book</h3>\r\n\r\n          <Col span={12} align=\"left\">\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            <Form\r\n              onFinish={handleSubmit(onSubmit)}\r\n              className=\"ant-form ant-form-horizontal login-form\"\r\n            >\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Category Name\"\r\n                    ref={register({\r\n                      required: \"Category Name is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.name && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.name.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"ant-btn ant-btn-primary login-form-button\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCategory;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\authors\\AddAuthor.js",["225"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postAuthor } from \"../../../../redux/actions/authors\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst AddAuthor = props => {\r\n  const notifications = useSelector(state => state.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, errors, handleSubmit, watch, reset } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    // alert(JSON.stringify(data));\r\n    dispatch(postAuthor(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">Add New Author</h3>\r\n\r\n          <Col span={12} align=\"left\">\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            <Form\r\n              onFinish={handleSubmit(onSubmit)}\r\n              className=\"ant-form ant-form-horizontal login-form\"\r\n            >\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Author Name\"\r\n                    ref={register({\r\n                      required: \"Author Name is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.name && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.name.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"ant-btn ant-btn-primary login-form-button\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAuthor;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\authors\\Authors.js",["226"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Table, Avatar, Space, Button, Modal, Alert } from \"antd\";\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\nimport { getAuthors, deleteAuthor } from \"../../../../redux/actions/authors\";\r\n\r\nconst Authors = props => {\r\n  //const { register, handleSubmit, errors } = useForm();\r\n  const notifications = useSelector(state => state.notifications);\r\n  const authors = useSelector(state => state.authors);\r\n  const dispatch = useDispatch();\r\n  const [delConfirm, setDelConfirm] = useState(false);\r\n  const [delState, delDelState] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(getAuthors());\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"Slug\",\r\n      dataIndex: \"slug\",\r\n      key: \"slug\"\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            size=\"small\"\r\n            type=\"ghost\"\r\n            href={`/authors/${record.slug}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            View\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            onClick={() => {\r\n              delDelState(record.id);\r\n              setDelConfirm(true);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const data =\r\n    !notifications.loading && authors.authors !== null\r\n      ? authors.authors.map(author => ({\r\n          id: author.id,\r\n          name: author.name,\r\n          slug: author.slug\r\n        }))\r\n      : null;\r\n\r\n  const deleteCallback = id => {\r\n    dispatch(deleteAuthor(id));\r\n    setDelConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">\r\n            Authors{\" \"}\r\n            <Button size=\"small\" type=\"primary\" href=\"/admin/authors/add\">\r\n              Add New\r\n            </Button>\r\n          </h3>\r\n          <Col span={12}>\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n          </Col>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            pagination={{\r\n              pageSizeOptions: [\"25\", \"50\"],\r\n              showSizeChanger: true\r\n            }}\r\n          />\r\n          <Footer />\r\n        </Col>\r\n        <Modal\r\n          title=\"Modal\"\r\n          visible={delConfirm}\r\n          onOk={() => deleteCallback(delState)}\r\n          onCancel={() => setDelConfirm(false)}\r\n          okText=\"Ok\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          Delete Author?\r\n        </Modal>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Authors;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\publishers\\AddPublisher.js",["227"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { useForm } from \"react-hook-form\";\r\nimport { Row, Col, Form, Button, Alert } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { postPublisher } from \"../../../../redux/actions/publishers\";\r\n\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\n\r\nconst AddPublisher = props => {\r\n  const notifications = useSelector(state => state.notifications);\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, errors, handleSubmit, watch, reset } = useForm();\r\n\r\n  const onSubmit = (data, e) => {\r\n    // alert(JSON.stringify(data));\r\n    dispatch(postPublisher(data));\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">Add New Publisher</h3>\r\n\r\n          <Col span={12} align=\"left\">\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n            <Form\r\n              onFinish={handleSubmit(onSubmit)}\r\n              className=\"ant-form ant-form-horizontal login-form\"\r\n            >\r\n              <div className=\"ant-form-item\">\r\n                <div className=\"ant-form-item-control\">\r\n                  <input\r\n                    name=\"name\"\r\n                    placeholder=\"Publisher Name\"\r\n                    ref={register({\r\n                      required: \"Publisher Name is required.\"\r\n                    })}\r\n                    className=\"ant-input\"\r\n                  />\r\n                  <i aria-hidden=\"true\" className=\"user icon\"></i>\r\n                </div>\r\n                {errors.name && (\r\n                  <p className=\"errors\">\r\n                    <i class=\"fas fa-exclamation-triangle\"></i>{\" \"}\r\n                    {errors.name.message}\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"ant-form-item\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  className=\"ant-btn ant-btn-primary login-form-button\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPublisher;\r\n","C:\\Users\\user\\Desktop\\dong\\LAMBDA\\React JS, mern\\Libroh.ph\\libroh\\src\\components\\backend\\protected\\publishers\\Publishers.js",["228"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Row, Col, Table, Avatar, Space, Button, Modal, Alert } from \"antd\";\r\nimport Header from \"../Header\";\r\nimport Footer from \"../Footer\";\r\nimport {\r\n  getPublishers,\r\n  deletePublisher\r\n} from \"../../../../redux/actions/publishers\";\r\n\r\nconst Publishers = props => {\r\n  //const { register, handleSubmit, errors } = useForm();\r\n  const notifications = useSelector(state => state.notifications);\r\n  const publishers = useSelector(state => state.publishers);\r\n  const dispatch = useDispatch();\r\n  const [delConfirm, setDelConfirm] = useState(false);\r\n  const [delState, delDelState] = useState();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPublishers());\r\n  }, [dispatch]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\"\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      key: \"name\"\r\n    },\r\n    {\r\n      title: \"Slug\",\r\n      dataIndex: \"slug\",\r\n      key: \"slug\"\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            size=\"small\"\r\n            type=\"ghost\"\r\n            href={`/publisher/${record.slug}`}\r\n            target=\"_blank\"\r\n            rel=\"noopener\"\r\n          >\r\n            View\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            type=\"danger\"\r\n            onClick={() => {\r\n              delDelState(record.id);\r\n              setDelConfirm(true);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Space>\r\n      )\r\n    }\r\n  ];\r\n\r\n  const data =\r\n    !notifications.loading && publishers.publishers !== null\r\n      ? publishers.publishers.map(publisher => ({\r\n          id: publisher.id,\r\n          name: publisher.name,\r\n          slug: publisher.slug\r\n        }))\r\n      : null;\r\n\r\n  const deleteCallback = id => {\r\n    dispatch(deletePublisher(id));\r\n    setDelConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"header-wrapper\">\r\n        <Col span={17} offset={3}>\r\n          <Header />\r\n        </Col>\r\n      </div>\r\n      <Row>\r\n        <Col span={17} offset={3}>\r\n          <h3 className=\"page-title\">\r\n            Authors{\" \"}\r\n            <Button size=\"small\" type=\"primary\" href=\"/admin/publishers/add\">\r\n              Add New\r\n            </Button>\r\n          </h3>\r\n          <Col span={12}>\r\n            <div className=\"loader-wrapper\" align=\"center\">\r\n              {notifications.loading && <div className=\"loader\"></div>}\r\n            </div>\r\n\r\n            {notifications.message && (\r\n              <Alert message={notifications.message} type=\"warning\" showIcon />\r\n            )}\r\n          </Col>\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            pagination={{\r\n              pageSizeOptions: [\"25\", \"50\"],\r\n              showSizeChanger: true\r\n            }}\r\n          />\r\n          <Footer />\r\n        </Col>\r\n        <Modal\r\n          title=\"Modal\"\r\n          visible={delConfirm}\r\n          onOk={() => deleteCallback(delState)}\r\n          onCancel={() => setDelConfirm(false)}\r\n          okText=\"Ok\"\r\n          cancelText=\"Cancel\"\r\n        >\r\n          Delete Publisher?\r\n        </Modal>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Publishers;\r\n",{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":15},{"ruleId":"233","severity":1,"message":"237","line":35,"column":9,"nodeType":"235","messageId":"236","endLine":35,"endColumn":17},{"ruleId":"233","severity":1,"message":"234","line":6,"column":8,"nodeType":"235","messageId":"236","endLine":6,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":15},{"ruleId":"233","severity":1,"message":"238","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":23},{"ruleId":"233","severity":1,"message":"234","line":5,"column":8,"nodeType":"235","messageId":"236","endLine":5,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":4,"column":8,"nodeType":"235","messageId":"236","endLine":4,"endColumn":15},{"ruleId":"233","severity":1,"message":"239","line":2,"column":15,"nodeType":"235","messageId":"236","endLine":2,"endColumn":18},{"ruleId":"240","severity":1,"message":"241","line":8,"column":25,"nodeType":"242","endLine":8,"endColumn":37},{"ruleId":"233","severity":1,"message":"243","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":14},{"ruleId":"233","severity":1,"message":"234","line":3,"column":8,"nodeType":"235","messageId":"236","endLine":3,"endColumn":15},{"ruleId":"233","severity":1,"message":"244","line":4,"column":16,"nodeType":"235","messageId":"236","endLine":4,"endColumn":21},{"ruleId":"229","replacedBy":"245"},{"ruleId":"231","replacedBy":"246"},{"ruleId":"233","severity":1,"message":"239","line":4,"column":15,"nodeType":"235","messageId":"236","endLine":4,"endColumn":18},{"ruleId":"233","severity":1,"message":"244","line":4,"column":20,"nodeType":"235","messageId":"236","endLine":4,"endColumn":25},{"ruleId":"233","severity":1,"message":"247","line":4,"column":27,"nodeType":"235","messageId":"236","endLine":4,"endColumn":37},{"ruleId":"233","severity":1,"message":"248","line":4,"column":39,"nodeType":"235","messageId":"236","endLine":4,"endColumn":43},{"ruleId":"233","severity":1,"message":"249","line":4,"column":41,"nodeType":"235","messageId":"236","endLine":4,"endColumn":47},{"ruleId":"233","severity":1,"message":"250","line":26,"column":43,"nodeType":"235","messageId":"236","endLine":26,"endColumn":48},{"ruleId":"233","severity":1,"message":"249","line":4,"column":41,"nodeType":"235","messageId":"236","endLine":4,"endColumn":47},{"ruleId":"233","severity":1,"message":"250","line":29,"column":43,"nodeType":"235","messageId":"236","endLine":29,"endColumn":48},{"ruleId":"233","severity":1,"message":"251","line":29,"column":50,"nodeType":"235","messageId":"236","endLine":29,"endColumn":55},{"ruleId":"233","severity":1,"message":"252","line":3,"column":27,"nodeType":"235","messageId":"236","endLine":3,"endColumn":33},{"ruleId":"233","severity":1,"message":"253","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":26},{"ruleId":"233","severity":1,"message":"254","line":1,"column":28,"nodeType":"235","messageId":"236","endLine":1,"endColumn":36},{"ruleId":"233","severity":1,"message":"249","line":4,"column":41,"nodeType":"235","messageId":"236","endLine":4,"endColumn":47},{"ruleId":"233","severity":1,"message":"255","line":13,"column":9,"nodeType":"235","messageId":"236","endLine":13,"endColumn":14},{"ruleId":"233","severity":1,"message":"250","line":16,"column":43,"nodeType":"235","messageId":"236","endLine":16,"endColumn":48},{"ruleId":"233","severity":1,"message":"250","line":15,"column":43,"nodeType":"235","messageId":"236","endLine":15,"endColumn":48},{"ruleId":"233","severity":1,"message":"252","line":3,"column":27,"nodeType":"235","messageId":"236","endLine":3,"endColumn":33},{"ruleId":"233","severity":1,"message":"250","line":15,"column":43,"nodeType":"235","messageId":"236","endLine":15,"endColumn":48},{"ruleId":"233","severity":1,"message":"252","line":3,"column":27,"nodeType":"235","messageId":"236","endLine":3,"endColumn":33},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'cookies' is defined but never used.","Identifier","unusedVar","'dispatch' is assigned a value but never used.","'axiosWithAuth' is defined but never used.","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Line' is defined but never used.","'Image' is defined but never used.",["256"],["257"],"'Pagination' is defined but never used.","'Rate' is defined but never used.","'Select' is defined but never used.","'watch' is assigned a value but never used.","'reset' is assigned a value but never used.","'Avatar' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'books' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]